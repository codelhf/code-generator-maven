#set($suffix = $!{Template.getSuffix()})
#set($serverResponsePackageName = $!{serverResponse.getPackageName()})
#set($entityDTOPackageName = $!{entityDTO.getPackageName()})
#set($entityDTOSuffix = $!{entityDTO.getSuffix()})
#set($entitySuffix = $!{entity.getSuffix()})
#set($servicePackageName = $!{service.getPackageName()})
#set($serviceSuffix = $!{service.getSuffix()})
#set($pkJavaType = $!{pkColumn.javaType})
#set($pkPropertyName = $!{pkColumn.propertyName})
package $!{Template.getPackageName()};

import $!{serverResponsePackageName}.$!{ResponseClass};
import $!{entityDTOPackageName}.$!{ClassName}$!{entityDTOSuffix};
import $!{servicePackageName}.$!{ClassName}$!{serviceSuffix};
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.*;

import java.util.Map;

/**
 * @Title: $!{ClassName}${suffix}
 * @Description: $!{ClassName}$!{entitySuffix}控制层
 * @Company: $!{company}
 * @Author: $!{author}
 * @CreateTime: $!{createTime}
 */
#if (${httpPrefix})
    #set($RequestMapping = "$!{httpPrefix}/$!{className}")
#else
    #set($RequestMapping = "$!{className}")
#end
@RestController
@RequestMapping(value = "/$!{RequestMapping}")
public class $!{ClassName}$!{suffix} {

    @Autowired
    private $!{ClassName}$!{serviceSuffix} $!{className}$!{serviceSuffix};

#if ($!{generateSwagger} == true)
    @ApiOperation(value = "查询$!{ClassName}$!{entitySuffix}列表")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "pageNum", value = "分页当前页码", dataType = "Integer", required = false),
        @ApiImplicitParam(name = "pageSize", value = "分页一页大小", dataType = "Integer", required = false),
        @ApiImplicitParam(name = "params", value = "其他查询参数", dataType = "Map", required = false)
    })
#end
    @GetMapping("")
    public $!{ResponseClass}<PageInfo> list(@RequestParam("pageNum") Integer pageNum,
                                           @RequestParam("pageSize") Integer pageSize,
                                           @RequestParam("params") Map<String, String> params) {
        return $!{className}$!{serviceSuffix}.list(pageNum, pageSize, params);
    }

#if ($!{generateSwagger} == true)
    @ApiOperation(value = "查询$!{ClassName}$!{entitySuffix}对象}")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "$!{pkPropertyName}", value = "$!{ClassName}$!{entitySuffix}主键", dataType = "$!{pkJavaType}", required = true)
    })
#end
    @GetMapping("/{$!{pkColumn.propertyName}}")
    public $!{ResponseClass}<$!{ClassName}$!{entityDTOSuffix}> select(@PathVariable("$!{pkPropertyName}") $!{pkJavaType} $!{pkPropertyName}) {
        return $!{className}$!{serviceSuffix}.select($!{pkPropertyName});
    }

#if($!{isView} == false)
#if ($!{generateSwagger} == true)
    @ApiOperation(value = "保存$!{ClassName}$!{entitySuffix}对象")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "$!{className}$!{entityDTOSuffix}", value = "$!{ClassName}$!{entityDTOSuffix}对象", dataType = "$!{ClassName}$!{entityDTOSuffix}", required = true)
    })
#end
    @PostMapping("")
    public $!{ResponseClass}<String> insert(@RequestBody $!{ClassName}$!{entityDTOSuffix} $!{className}$!{entityDTOSuffix}) {
        return $!{className}$!{serviceSuffix}.insert($!{className}$!{entityDTOSuffix});
    }

#if ($!{generateSwagger} == true)
    @ApiOperation(value = "更新$!{ClassName}$!{entitySuffix}对象")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "$!{pkPropertyName}", value = "$!{ClassName}$!{entitySuffix}主键", dataType = "$!{pkJavaType}", required = true),
        @ApiImplicitParam(name = "$!{className}$!{entityDTOSuffix}", value = "$!{ClassName}$!{entityDTOSuffix}对象", dataType = "$!{ClassName}$!{entityDTOSuffix}", required = true)
    })
#end
    @PutMapping("/{$!{pkColumn.propertyName}}")
    public $!{ResponseClass}<String> update(@PathVariable("$!{pkPropertyName}") $!{pkJavaType} $!{pkPropertyName},
                                           @RequestBody $!{ClassName}$!{entityDTOSuffix} $!{className}$!{entityDTOSuffix}) {
        return $!{className}$!{serviceSuffix}.update($!{pkPropertyName}, $!{className}$!{entityDTOSuffix});
    }

#if ($!{generateSwagger} == true)
    @ApiOperation(value = "批量删除$!{ClassName}$!{entitySuffix}对象}")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "$!{pkPropertyName}s", value = "$!{ClassName}$!{entitySuffix}主键字符串,用 , 分隔", dataType = "String", required = true)
    })
#end
    @DeleteMapping("/{$!{pkPropertyName}s}")
    public $!{ResponseClass}<String> delete(@PathVariable("$!{pkPropertyName}s") String $!{pkPropertyName}s) {
        return $!{className}$!{serviceSuffix}.delete($!{pkPropertyName}s);
    }
#end
}
