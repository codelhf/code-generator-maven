<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.generator.demo.dao.PrizeMapper">
    <resultMap id="BaseResultMap" type="com.example.generator.demo.po.Prize">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <result column="prize" jdbcType="VARCHAR" property="prize"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, grade, prize, image, stock, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="int" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from lottery_prize
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="int">
        delete from lottery_prize
        where id = #{id}
    </delete>
    <insert id="insert" parameterType="com.example.generator.demo.po.Prize">
        insert into lottery_prize
        (id, grade, prize, image, stock, create_time, update_time)
        values
        (#{id, jdbcType=INTEGER}, #{grade, jdbcType=VARCHAR}, #{prize, jdbcType=VARCHAR}, #{image, jdbcType=VARCHAR}, #{stock, jdbcType=INTEGER}, #{createTime, jdbcType=TIMESTAMP}, #{updateTime, jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.example.generator.demo.po.Prize">
        insert into lottery_prize
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="prize != null">
                prize,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id, jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                #{grade, jdbcType=VARCHAR},
            </if>
            <if test="prize != null">
                #{prize, jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image, jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                #{stock, jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.generator.demo.po.Prize">
        update lottery_prize
        <set>
            <if test="grade != null">
                grade = #{grade, jdbcType=VARCHAR},
            </if>
            <if test="prize != null">
                prize = #{prize, jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                image = #{image, jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                stock = #{stock, jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.generator.demo.po.Prize">
        update lottery_prize
        set
            grade = #{grade, jdbcType=VARCHAR},
            prize = #{prize, jdbcType=VARCHAR},
            image = #{image, jdbcType=VARCHAR},
            stock = #{stock, jdbcType=INTEGER},
            create_time = #{createTime, jdbcType=TIMESTAMP},
            update_time = #{updateTime, jdbcType=TIMESTAMP}
        where id = #{id}
    </update>
    <delete id="deleteByIdList" parameterType="map">
        delete from lottery_prize
        where id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")" >
            #{id}
        </foreach>
    </delete>
    <select id="selectPageList" parameterType="com.example.generator.demo.po.Prize" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from lottery_prize
        <where>
            <if test="id != null">
                and id like #{id}
            </if>
            <if test="grade != null">
                and grade like #{grade}
            </if>
            <if test="prize != null">
                and prize like #{prize}
            </if>
            <if test="image != null">
                and image like #{image}
            </if>
            <if test="stock != null">
                and stock like #{stock}
            </if>
            <if test="createTime != null">
                and create_time like #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time like #{updateTime}
            </if>
        </where>
    </select>
</mapper>
