<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.generator.demo.dao.PrizeMapper">
    <resultMap id="BaseResultMap" type="com.example.generator.demo.entity.Prize">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="admin_id" jdbcType="INTEGER" property="adminId"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <result column="prize" jdbcType="VARCHAR" property="prize"/>
        <result column="serial" jdbcType="INTEGER" property="serial"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="reset_stock" jdbcType="INTEGER" property="resetStock"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,admin_id,grade,prize,serial,stock,reset_stock,image,create_time,update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from lottery_prize
        where id = #{id, jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="Integer">
        delete from lottery_prize
        where id = #{id, jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.example.generator.demo.entity.Prize">
        insert into lottery_prize
        (id,admin_id,grade,prize,serial,stock,reset_stock,image,create_time,update_time)
        values
        (#{id, jdbcType=INTEGER},#{adminId, jdbcType=INTEGER},#{grade, jdbcType=VARCHAR},#{prize, jdbcType=VARCHAR},#{serial, jdbcType=INTEGER},#{stock, jdbcType=INTEGER},#{resetStock, jdbcType=INTEGER},#{image, jdbcType=VARCHAR},#{createTime, jdbcType=TIMESTAMP},#{updateTime, jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.example.generator.demo.entity.Prize">
        insert into lottery_prize
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="adminId != null">
                admin_id,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="prize != null">
                prize,
            </if>
            <if test="serial != null">
                serial,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="resetStock != null">
                reset_stock,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id, jdbcType=INTEGER},
            </if>
            <if test="adminId != null">
                #{adminId, jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                #{grade, jdbcType=VARCHAR},
            </if>
            <if test="prize != null">
                #{prize, jdbcType=VARCHAR},
            </if>
            <if test="serial != null">
                #{serial, jdbcType=INTEGER},
            </if>
            <if test="stock != null">
                #{stock, jdbcType=INTEGER},
            </if>
            <if test="resetStock != null">
                #{resetStock, jdbcType=INTEGER},
            </if>
            <if test="image != null">
                #{image, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.generator.demo.entity.Prize">
        update lottery_prize
        <set>
            <if test="id != null">
                id = #{id, jdbcType=INTEGER},
            </if>
            <if test="adminId != null">
                admin_id = #{adminId, jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                grade = #{grade, jdbcType=VARCHAR},
            </if>
            <if test="prize != null">
                prize = #{prize, jdbcType=VARCHAR},
            </if>
            <if test="serial != null">
                serial = #{serial, jdbcType=INTEGER},
            </if>
            <if test="stock != null">
                stock = #{stock, jdbcType=INTEGER},
            </if>
            <if test="resetStock != null">
                reset_stock = #{resetStock, jdbcType=INTEGER},
            </if>
            <if test="image != null">
                image = #{image, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id, jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.generator.demo.entity.Prize">
        update lottery_prize
        set
            id = #{id, jdbcType=INTEGER},
            admin_id = #{adminId, jdbcType=INTEGER},
            grade = #{grade, jdbcType=VARCHAR},
            prize = #{prize, jdbcType=VARCHAR},
            serial = #{serial, jdbcType=INTEGER},
            stock = #{stock, jdbcType=INTEGER},
            reset_stock = #{resetStock, jdbcType=INTEGER},
            image = #{image, jdbcType=VARCHAR},
            create_time = #{createTime, jdbcType=TIMESTAMP},
            update_time = #{updateTime, jdbcType=TIMESTAMP},
        where id = #{id, jdbcType=INTEGER}
    </update>
    <delete id="deleteBatchIds" parameterType="map">
        delete from lottery_prize
        where id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")" >
            #{id}
        </foreach>
    </delete>
    <select id="selectPage" parameterType="com.example.generator.demo.entity.Prize" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from lottery_prize
        <where>
            <if test="id != null">
                and id like #{id}
            </if>
            <if test="adminId != null">
                and admin_id like #{adminId}
            </if>
            <if test="grade != null">
                and grade like #{grade}
            </if>
            <if test="prize != null">
                and prize like #{prize}
            </if>
            <if test="serial != null">
                and serial like #{serial}
            </if>
            <if test="stock != null">
                and stock like #{stock}
            </if>
            <if test="resetStock != null">
                and reset_stock like #{resetStock}
            </if>
            <if test="image != null">
                and image like #{image}
            </if>
            <if test="createTime != null">
                and create_time like #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time like #{updateTime}
            </if>
        </where>
    </select>
</mapper>
