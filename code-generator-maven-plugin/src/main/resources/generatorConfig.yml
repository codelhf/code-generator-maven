#配置文件
resource: datasource.properties
#旨在创建class时，对注释进行控制
commentGenerator:
  #代码注释配置
  author: liuhf
  company: example
  suppressAllComments: true
  suppressDate: true
  dateFormat: yyyy-MM-dd HH:mm:ss
  addRemarkComments: true
#数据源
dataSource:
  #非必须参数 jdbc驱动位置
  driverLocation: src/main/tools/mysql-connector-java-5.1.6-bin.jar
  #driver非必须参数
  driverClass: com.mysql.jdbc.Driver
  url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8
  username:
  password:
#java类型适配
javaTypeResolver:
  #当表名或者字段名为SQL关键字的时候，可以设置该属性为true，MBG会自动给表名或字段名添加分隔符
  autoDelimitKeywords: true
  beginningDelimiter: "`"
  endingDelimiter: "`"
  #默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
  #true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
  forceBigDecimals: false
#service层开始要和dao能够分开,不提供重写文件功能
serviceGenerator:
  #是否生成代码
  generator: true
  #是否允许子包，即targetPackage.schemaName.tableName
  enableSubPackages: false
  targetProject: ./src/main/java
  controller: com.example.generator.controller
  service: com.example.generator.service
  serviceImpl: com.example.generator.service.impl
#dao层开始要和service能够分开,提供是否重写文件功能
CommonGenerator:
  #是否重写文件
  overwrite: true
  #是否允许子包，即targetPackage.schemaName.tableName
  enableSubPackages: false
  dtoGenerator:
    targetProject: ./src/main/java
    targetPackage: com.example.generator.service.dto
    #是否对dto添加全参构造函数, 添加全参构造函数时需添加无参构造
    allConstructor: true
    #是否对dto中char类型的列进行trim操作
    trimStrings: true
    #建立的dto对象是否不可改变, 即生成的dto对象不会有setter方法,只有构造方法
    immutable: false
    #是否对dto使用lombok注解, 使用lombok注解将不会生成getter,setter和constructor方法
    useLombok: false
  modelGenerator:
    targetProject: ./src/main/java
    targetPackage: com.example.generator.po
    #是否对model添加全参构造函数, 添加全参构造函数时需添加无参构造
    allConstructor: true
    #是否对model中char类型的列进行trim操作
    trimStrings: true
    #建立的model对象是否不可改变, 即生成的model对象不会有setter方法,只有构造方法
    immutable: false
    #是否对model使用lombok注解, 使用lombok注解将不会生成getter,setter和constructor方法
    useLombok: false
  daoGenerator:
    targetProject: ./src/main/java
    targetPackage: com.example.generator.dao
  mapperGenerator:
    targetProject: ./src/main/resources
    targetPackage: mappers
#数据库表和视图
tablesConfiguration:
  - {
      tableName: sys_user,
      domainName: SysUser,
      columnOverride:
        - {column: req_params, jdbcType: VARCHAR}
        - {column: res_params, jdbcType: VARCHAR}
    }
  - {
      tableName: sys_role,
      domainName: SysRole
    }
  - {
      tableName: sys_dept,
      domainName: SysDept
    }
viewsConfiguration:
  - {
      viewName: v_user,
      domainName: VUser
    }
  - {
      viewName: v_role,
      domainName: VUser
    }
  - {
      viewName: v_dept,
      domainName: VDept
    }